// Mocks generated by Mockito 5.0.16 from annotations
// in watchlist/test/presentation/bloc/watchlist_page/wathclist_bloc_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:core/core.dart' as _i2;
import 'package:core/utils/failure.dart' as _i6;
import 'package:dartz/dartz.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:watchlist/domain/usecase/get_watchlist.dart' as _i4;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeWatchlistRepository_0 extends _i1.Fake
    implements _i2.WatchlistRepository {}

class _FakeEither_1<L, R> extends _i1.Fake implements _i3.Either<L, R> {}

/// A class which mocks [GetWatchlist].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetWatchlist extends _i1.Mock implements _i4.GetWatchlist {
  MockGetWatchlist() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.WatchlistRepository get repository => (super.noSuchMethod(
      Invocation.getter(#repository),
      returnValue: _FakeWatchlistRepository_0()) as _i2.WatchlistRepository);
  @override
  _i5.Future<_i3.Either<_i6.Failure, List<_i2.Watchlist>>> execute() =>
      (super.noSuchMethod(Invocation.method(#execute, []),
              returnValue:
                  Future<_i3.Either<_i6.Failure, List<_i2.Watchlist>>>.value(
                      _FakeEither_1<_i6.Failure, List<_i2.Watchlist>>()))
          as _i5.Future<_i3.Either<_i6.Failure, List<_i2.Watchlist>>>);
  @override
  String toString() => super.toString();
}
