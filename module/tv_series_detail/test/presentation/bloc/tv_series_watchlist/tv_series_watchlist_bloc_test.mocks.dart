// Mocks generated by Mockito 5.0.16 from annotations
// in tv_series_detail/test/presentation/bloc/tv_series_watchlist/tv_series_watchlist_bloc_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:core/core.dart' as _i2;
import 'package:core/utils/failure.dart' as _i6;
import 'package:core/utils/state_enum.dart' as _i7;
import 'package:dartz/dartz.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:tv_series_detail/domain/usecase/get_watchlist_status.dart'
    as _i4;
import 'package:tv_series_detail/domain/usecase/remove_watchlist_tv_series.dart'
    as _i9;
import 'package:tv_series_detail/domain/usecase/save_watchlist_tv_series.dart'
    as _i8;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeWatchlistRepository_0 extends _i1.Fake
    implements _i2.WatchlistRepository {}

class _FakeEither_1<L, R> extends _i1.Fake implements _i3.Either<L, R> {}

/// A class which mocks [GetTvSeriesWatchListStatus].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTvSeriesWatchListStatus extends _i1.Mock
    implements _i4.GetTvSeriesWatchListStatus {
  MockGetTvSeriesWatchListStatus() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.WatchlistRepository get repository => (super.noSuchMethod(
      Invocation.getter(#repository),
      returnValue: _FakeWatchlistRepository_0()) as _i2.WatchlistRepository);
  @override
  _i5.Future<_i3.Either<_i6.Failure, bool>> execute(
          int? id, _i7.WatchlistType? type) =>
      (super.noSuchMethod(Invocation.method(#execute, [id, type]),
              returnValue: Future<_i3.Either<_i6.Failure, bool>>.value(
                  _FakeEither_1<_i6.Failure, bool>()))
          as _i5.Future<_i3.Either<_i6.Failure, bool>>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [SaveWatchlistTvSeries].
///
/// See the documentation for Mockito's code generation for more information.
class MockSaveWatchlistTvSeries extends _i1.Mock
    implements _i8.SaveWatchlistTvSeries {
  MockSaveWatchlistTvSeries() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.WatchlistRepository get repository => (super.noSuchMethod(
      Invocation.getter(#repository),
      returnValue: _FakeWatchlistRepository_0()) as _i2.WatchlistRepository);
  @override
  _i5.Future<_i3.Either<_i6.Failure, String>> execute(
          _i2.TvSeriesDetail? tvSeries) =>
      (super.noSuchMethod(Invocation.method(#execute, [tvSeries]),
              returnValue: Future<_i3.Either<_i6.Failure, String>>.value(
                  _FakeEither_1<_i6.Failure, String>()))
          as _i5.Future<_i3.Either<_i6.Failure, String>>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [RemoveWatchlistTvSerios].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoveWatchlistTvSerios extends _i1.Mock
    implements _i9.RemoveWatchlistTvSerios {
  MockRemoveWatchlistTvSerios() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.WatchlistRepository get repository => (super.noSuchMethod(
      Invocation.getter(#repository),
      returnValue: _FakeWatchlistRepository_0()) as _i2.WatchlistRepository);
  @override
  _i5.Future<_i3.Either<_i6.Failure, String>> execute(
          _i2.TvSeriesDetail? tvSeries) =>
      (super.noSuchMethod(Invocation.method(#execute, [tvSeries]),
              returnValue: Future<_i3.Either<_i6.Failure, String>>.value(
                  _FakeEither_1<_i6.Failure, String>()))
          as _i5.Future<_i3.Either<_i6.Failure, String>>);
  @override
  String toString() => super.toString();
}
