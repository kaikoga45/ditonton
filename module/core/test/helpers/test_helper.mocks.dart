// Mocks generated by Mockito 5.0.16 from annotations
// in core/test/helpers/test_helper.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;
import 'dart:convert' as _i7;
import 'dart:typed_data' as _i8;

import 'package:core/core.dart' as _i3;
import 'package:dartz/dartz.dart' as _i2;
import 'package:http/http.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:sqflite_sqlcipher/sqflite.dart' as _i6;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeEither_0<L, R> extends _i1.Fake implements _i2.Either<L, R> {}

class _FakeMovieDetailResponse_1 extends _i1.Fake
    implements _i3.MovieDetailResponse {}

class _FakeTvSeasonResponse_2 extends _i1.Fake implements _i3.TvSeasonResponse {
}

class _FakeTvSeriesDetailResponse_3 extends _i1.Fake
    implements _i3.TvSeriesDetailResponse {}

class _FakeResponse_4 extends _i1.Fake implements _i4.Response {}

class _FakeStreamedResponse_5 extends _i1.Fake implements _i4.StreamedResponse {
}

/// A class which mocks [WatchlistRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockWatchlistRepository extends _i1.Mock
    implements _i3.WatchlistRepository {
  MockWatchlistRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.Either<_i3.Failure, List<_i3.Watchlist>>> getWatchlist() =>
      (super.noSuchMethod(Invocation.method(#getWatchlist, []),
              returnValue:
                  Future<_i2.Either<_i3.Failure, List<_i3.Watchlist>>>.value(
                      _FakeEither_0<_i3.Failure, List<_i3.Watchlist>>()))
          as _i5.Future<_i2.Either<_i3.Failure, List<_i3.Watchlist>>>);
  @override
  _i5.Future<_i2.Either<_i3.Failure, bool>> isAddedToWatchlist(
          int? id, _i3.WatchlistType? type) =>
      (super.noSuchMethod(Invocation.method(#isAddedToWatchlist, [id, type]),
              returnValue: Future<_i2.Either<_i3.Failure, bool>>.value(
                  _FakeEither_0<_i3.Failure, bool>()))
          as _i5.Future<_i2.Either<_i3.Failure, bool>>);
  @override
  _i5.Future<_i2.Either<_i3.Failure, String>> saveWatchlistTvSeries(
          _i3.TvSeriesDetail? tvSeries) =>
      (super.noSuchMethod(Invocation.method(#saveWatchlistTvSeries, [tvSeries]),
              returnValue: Future<_i2.Either<_i3.Failure, String>>.value(
                  _FakeEither_0<_i3.Failure, String>()))
          as _i5.Future<_i2.Either<_i3.Failure, String>>);
  @override
  _i5.Future<_i2.Either<_i3.Failure, String>> saveWatchlistMovies(
          _i3.MovieDetail? movie) =>
      (super.noSuchMethod(Invocation.method(#saveWatchlistMovies, [movie]),
              returnValue: Future<_i2.Either<_i3.Failure, String>>.value(
                  _FakeEither_0<_i3.Failure, String>()))
          as _i5.Future<_i2.Either<_i3.Failure, String>>);
  @override
  _i5.Future<_i2.Either<_i3.Failure, String>> removeWatchlistTvSeries(
          _i3.TvSeriesDetail? tvSeries) =>
      (super.noSuchMethod(
              Invocation.method(#removeWatchlistTvSeries, [tvSeries]),
              returnValue: Future<_i2.Either<_i3.Failure, String>>.value(
                  _FakeEither_0<_i3.Failure, String>()))
          as _i5.Future<_i2.Either<_i3.Failure, String>>);
  @override
  _i5.Future<_i2.Either<_i3.Failure, String>> removeWatchlistMovies(
          _i3.MovieDetail? movie) =>
      (super.noSuchMethod(Invocation.method(#removeWatchlistMovies, [movie]),
              returnValue: Future<_i2.Either<_i3.Failure, String>>.value(
                  _FakeEither_0<_i3.Failure, String>()))
          as _i5.Future<_i2.Either<_i3.Failure, String>>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [MovieRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieRepository extends _i1.Mock implements _i3.MovieRepository {
  MockMovieRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.Either<_i3.Failure, List<_i3.Movie>>> getNowPlayingMovies() =>
      (super.noSuchMethod(Invocation.method(#getNowPlayingMovies, []),
          returnValue: Future<_i2.Either<_i3.Failure, List<_i3.Movie>>>.value(
              _FakeEither_0<_i3.Failure, List<_i3.Movie>>())) as _i5
          .Future<_i2.Either<_i3.Failure, List<_i3.Movie>>>);
  @override
  _i5.Future<_i2.Either<_i3.Failure, List<_i3.Movie>>> getPopularMovies() =>
      (super.noSuchMethod(Invocation.method(#getPopularMovies, []),
          returnValue: Future<_i2.Either<_i3.Failure, List<_i3.Movie>>>.value(
              _FakeEither_0<_i3.Failure, List<_i3.Movie>>())) as _i5
          .Future<_i2.Either<_i3.Failure, List<_i3.Movie>>>);
  @override
  _i5.Future<_i2.Either<_i3.Failure, List<_i3.Movie>>> getTopRatedMovies() =>
      (super.noSuchMethod(Invocation.method(#getTopRatedMovies, []),
          returnValue: Future<_i2.Either<_i3.Failure, List<_i3.Movie>>>.value(
              _FakeEither_0<_i3.Failure, List<_i3.Movie>>())) as _i5
          .Future<_i2.Either<_i3.Failure, List<_i3.Movie>>>);
  @override
  _i5.Future<_i2.Either<_i3.Failure, _i3.MovieDetail>> getMovieDetail(
          int? id) =>
      (super.noSuchMethod(Invocation.method(#getMovieDetail, [id]),
          returnValue: Future<_i2.Either<_i3.Failure, _i3.MovieDetail>>.value(
              _FakeEither_0<_i3.Failure, _i3.MovieDetail>())) as _i5
          .Future<_i2.Either<_i3.Failure, _i3.MovieDetail>>);
  @override
  _i5.Future<_i2.Either<_i3.Failure, List<_i3.Movie>>> getMovieRecommendations(
          int? id) =>
      (super.noSuchMethod(Invocation.method(#getMovieRecommendations, [id]),
          returnValue: Future<_i2.Either<_i3.Failure, List<_i3.Movie>>>.value(
              _FakeEither_0<_i3.Failure, List<_i3.Movie>>())) as _i5
          .Future<_i2.Either<_i3.Failure, List<_i3.Movie>>>);
  @override
  _i5.Future<_i2.Either<_i3.Failure, List<_i3.Movie>>> searchMovies(
          String? query) =>
      (super.noSuchMethod(Invocation.method(#searchMovies, [query]),
          returnValue: Future<_i2.Either<_i3.Failure, List<_i3.Movie>>>.value(
              _FakeEither_0<_i3.Failure, List<_i3.Movie>>())) as _i5
          .Future<_i2.Either<_i3.Failure, List<_i3.Movie>>>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [TvSeriesRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvSeriesRepository extends _i1.Mock
    implements _i3.TvSeriesRepository {
  MockTvSeriesRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.Either<_i3.Failure, List<_i3.TvSeason>>> getTvSeason(
          int? id, int? totalSeason) =>
      (super.noSuchMethod(Invocation.method(#getTvSeason, [id, totalSeason]),
              returnValue:
                  Future<_i2.Either<_i3.Failure, List<_i3.TvSeason>>>.value(
                      _FakeEither_0<_i3.Failure, List<_i3.TvSeason>>()))
          as _i5.Future<_i2.Either<_i3.Failure, List<_i3.TvSeason>>>);
  @override
  _i5.Future<_i2.Either<_i3.Failure, List<_i3.TvSeries>>> getTvOnAir() =>
      (super.noSuchMethod(Invocation.method(#getTvOnAir, []),
              returnValue:
                  Future<_i2.Either<_i3.Failure, List<_i3.TvSeries>>>.value(
                      _FakeEither_0<_i3.Failure, List<_i3.TvSeries>>()))
          as _i5.Future<_i2.Either<_i3.Failure, List<_i3.TvSeries>>>);
  @override
  _i5.Future<_i2.Either<_i3.Failure, List<_i3.TvSeries>>>
      getPopularTvSeries() =>
          (super.noSuchMethod(Invocation.method(#getPopularTvSeries, []),
                  returnValue:
                      Future<_i2.Either<_i3.Failure, List<_i3.TvSeries>>>.value(
                          _FakeEither_0<_i3.Failure, List<_i3.TvSeries>>()))
              as _i5.Future<_i2.Either<_i3.Failure, List<_i3.TvSeries>>>);
  @override
  _i5.Future<_i2.Either<_i3.Failure, List<_i3.TvSeries>>>
      getTopRatedTvSeries() =>
          (super.noSuchMethod(Invocation.method(#getTopRatedTvSeries, []),
                  returnValue:
                      Future<_i2.Either<_i3.Failure, List<_i3.TvSeries>>>.value(
                          _FakeEither_0<_i3.Failure, List<_i3.TvSeries>>()))
              as _i5.Future<_i2.Either<_i3.Failure, List<_i3.TvSeries>>>);
  @override
  _i5.Future<_i2.Either<_i3.Failure, _i3.TvSeriesDetail>> getTvSeriesDetail(
          int? id) =>
      (super.noSuchMethod(Invocation.method(#getTvSeriesDetail, [id]),
              returnValue:
                  Future<_i2.Either<_i3.Failure, _i3.TvSeriesDetail>>.value(
                      _FakeEither_0<_i3.Failure, _i3.TvSeriesDetail>()))
          as _i5.Future<_i2.Either<_i3.Failure, _i3.TvSeriesDetail>>);
  @override
  _i5.Future<_i2.Either<_i3.Failure, List<_i3.TvSeries>>>
      getTvSeriesRecommendations(int? id) => (super.noSuchMethod(
              Invocation.method(#getTvSeriesRecommendations, [id]),
              returnValue:
                  Future<_i2.Either<_i3.Failure, List<_i3.TvSeries>>>.value(
                      _FakeEither_0<_i3.Failure, List<_i3.TvSeries>>()))
          as _i5.Future<_i2.Either<_i3.Failure, List<_i3.TvSeries>>>);
  @override
  _i5.Future<_i2.Either<_i3.Failure, List<_i3.TvSeries>>> searchTvSeries(
          String? query) =>
      (super.noSuchMethod(Invocation.method(#searchTvSeries, [query]),
              returnValue:
                  Future<_i2.Either<_i3.Failure, List<_i3.TvSeries>>>.value(
                      _FakeEither_0<_i3.Failure, List<_i3.TvSeries>>()))
          as _i5.Future<_i2.Either<_i3.Failure, List<_i3.TvSeries>>>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [MovieRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieRemoteDataSource extends _i1.Mock
    implements _i3.MovieRemoteDataSource {
  MockMovieRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<List<_i3.MovieModel>> getNowPlayingMovies() => (super.noSuchMethod(
          Invocation.method(#getNowPlayingMovies, []),
          returnValue: Future<List<_i3.MovieModel>>.value(<_i3.MovieModel>[]))
      as _i5.Future<List<_i3.MovieModel>>);
  @override
  _i5.Future<List<_i3.MovieModel>> getPopularMovies() => (super.noSuchMethod(
          Invocation.method(#getPopularMovies, []),
          returnValue: Future<List<_i3.MovieModel>>.value(<_i3.MovieModel>[]))
      as _i5.Future<List<_i3.MovieModel>>);
  @override
  _i5.Future<List<_i3.MovieModel>> getTopRatedMovies() => (super.noSuchMethod(
          Invocation.method(#getTopRatedMovies, []),
          returnValue: Future<List<_i3.MovieModel>>.value(<_i3.MovieModel>[]))
      as _i5.Future<List<_i3.MovieModel>>);
  @override
  _i5.Future<_i3.MovieDetailResponse> getMovieDetail(int? id) =>
      (super.noSuchMethod(Invocation.method(#getMovieDetail, [id]),
              returnValue: Future<_i3.MovieDetailResponse>.value(
                  _FakeMovieDetailResponse_1()))
          as _i5.Future<_i3.MovieDetailResponse>);
  @override
  _i5.Future<List<_i3.MovieModel>> getMovieRecommendations(int? id) =>
      (super.noSuchMethod(Invocation.method(#getMovieRecommendations, [id]),
              returnValue:
                  Future<List<_i3.MovieModel>>.value(<_i3.MovieModel>[]))
          as _i5.Future<List<_i3.MovieModel>>);
  @override
  _i5.Future<List<_i3.MovieModel>> searchMovies(String? query) =>
      (super.noSuchMethod(Invocation.method(#searchMovies, [query]),
              returnValue:
                  Future<List<_i3.MovieModel>>.value(<_i3.MovieModel>[]))
          as _i5.Future<List<_i3.MovieModel>>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [MovieLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieLocalDataSource extends _i1.Mock
    implements _i3.MovieLocalDataSource {
  MockMovieLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<String> insertWatchlist(_i3.MovieTable? movie) =>
      (super.noSuchMethod(Invocation.method(#insertWatchlist, [movie]),
          returnValue: Future<String>.value('')) as _i5.Future<String>);
  @override
  _i5.Future<String> removeWatchlist(_i3.MovieTable? movie) =>
      (super.noSuchMethod(Invocation.method(#removeWatchlist, [movie]),
          returnValue: Future<String>.value('')) as _i5.Future<String>);
  @override
  _i5.Future<_i3.MovieTable?> getMovieById(int? id) =>
      (super.noSuchMethod(Invocation.method(#getMovieById, [id]),
              returnValue: Future<_i3.MovieTable?>.value())
          as _i5.Future<_i3.MovieTable?>);
  @override
  _i5.Future<List<_i3.MovieTable>> getWatchlistMovies() => (super.noSuchMethod(
          Invocation.method(#getWatchlistMovies, []),
          returnValue: Future<List<_i3.MovieTable>>.value(<_i3.MovieTable>[]))
      as _i5.Future<List<_i3.MovieTable>>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [TvSeriesRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvSeriesRemoteDataSource extends _i1.Mock
    implements _i3.TvSeriesRemoteDataSource {
  MockTvSeriesRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i3.TvSeasonResponse> getTvSeason(int? id, int? noSeason) =>
      (super.noSuchMethod(Invocation.method(#getTvSeason, [id, noSeason]),
              returnValue:
                  Future<_i3.TvSeasonResponse>.value(_FakeTvSeasonResponse_2()))
          as _i5.Future<_i3.TvSeasonResponse>);
  @override
  _i5.Future<List<_i3.TvSeriesModel>> getTvOnAir() =>
      (super.noSuchMethod(Invocation.method(#getTvOnAir, []),
              returnValue:
                  Future<List<_i3.TvSeriesModel>>.value(<_i3.TvSeriesModel>[]))
          as _i5.Future<List<_i3.TvSeriesModel>>);
  @override
  _i5.Future<List<_i3.TvSeriesModel>> getPopularTvSeries() =>
      (super.noSuchMethod(Invocation.method(#getPopularTvSeries, []),
              returnValue:
                  Future<List<_i3.TvSeriesModel>>.value(<_i3.TvSeriesModel>[]))
          as _i5.Future<List<_i3.TvSeriesModel>>);
  @override
  _i5.Future<List<_i3.TvSeriesModel>> getTopRatedTvSeries() =>
      (super.noSuchMethod(Invocation.method(#getTopRatedTvSeries, []),
              returnValue:
                  Future<List<_i3.TvSeriesModel>>.value(<_i3.TvSeriesModel>[]))
          as _i5.Future<List<_i3.TvSeriesModel>>);
  @override
  _i5.Future<_i3.TvSeriesDetailResponse> getTvSeriesDetail(int? id) =>
      (super.noSuchMethod(Invocation.method(#getTvSeriesDetail, [id]),
              returnValue: Future<_i3.TvSeriesDetailResponse>.value(
                  _FakeTvSeriesDetailResponse_3()))
          as _i5.Future<_i3.TvSeriesDetailResponse>);
  @override
  _i5.Future<List<_i3.TvSeriesModel>> getTvSeriesRecommendations(int? id) =>
      (super.noSuchMethod(Invocation.method(#getTvSeriesRecommendations, [id]),
              returnValue:
                  Future<List<_i3.TvSeriesModel>>.value(<_i3.TvSeriesModel>[]))
          as _i5.Future<List<_i3.TvSeriesModel>>);
  @override
  _i5.Future<List<_i3.TvSeriesModel>> searchTvSeries(String? query) =>
      (super.noSuchMethod(Invocation.method(#searchTvSeries, [query]),
              returnValue:
                  Future<List<_i3.TvSeriesModel>>.value(<_i3.TvSeriesModel>[]))
          as _i5.Future<List<_i3.TvSeriesModel>>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [TvSeriesLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvSeriesLocalDataSource extends _i1.Mock
    implements _i3.TvSeriesLocalDataSource {
  MockTvSeriesLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<String> insertWatchlist(_i3.TvSeriesTable? tvSeries) =>
      (super.noSuchMethod(Invocation.method(#insertWatchlist, [tvSeries]),
          returnValue: Future<String>.value('')) as _i5.Future<String>);
  @override
  _i5.Future<String> removeWatchlist(_i3.TvSeriesTable? tvSeries) =>
      (super.noSuchMethod(Invocation.method(#removeWatchlist, [tvSeries]),
          returnValue: Future<String>.value('')) as _i5.Future<String>);
  @override
  _i5.Future<_i3.TvSeriesTable?> getTvSeriesById(int? id) =>
      (super.noSuchMethod(Invocation.method(#getTvSeriesById, [id]),
              returnValue: Future<_i3.TvSeriesTable?>.value())
          as _i5.Future<_i3.TvSeriesTable?>);
  @override
  _i5.Future<List<_i3.TvSeriesTable>> getWatchlistTvSeries() =>
      (super.noSuchMethod(Invocation.method(#getWatchlistTvSeries, []),
              returnValue:
                  Future<List<_i3.TvSeriesTable>>.value(<_i3.TvSeriesTable>[]))
          as _i5.Future<List<_i3.TvSeriesTable>>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [DatabaseHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseHelper extends _i1.Mock implements _i3.DatabaseHelper {
  MockDatabaseHelper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i6.Database?> get database => (super.noSuchMethod(
      Invocation.getter(#database),
      returnValue: Future<_i6.Database?>.value()) as _i5.Future<_i6.Database?>);
  @override
  _i5.Future<List<Map<String, dynamic>>> getWatchlistMovie() =>
      (super.noSuchMethod(Invocation.method(#getWatchlistMovie, []),
              returnValue: Future<List<Map<String, dynamic>>>.value(
                  <Map<String, dynamic>>[]))
          as _i5.Future<List<Map<String, dynamic>>>);
  @override
  _i5.Future<int> insertWatchlistMovie(_i3.MovieTable? movie) =>
      (super.noSuchMethod(Invocation.method(#insertWatchlistMovie, [movie]),
          returnValue: Future<int>.value(0)) as _i5.Future<int>);
  @override
  _i5.Future<int> removeWatchlistMovie(_i3.MovieTable? movie) =>
      (super.noSuchMethod(Invocation.method(#removeWatchlistMovie, [movie]),
          returnValue: Future<int>.value(0)) as _i5.Future<int>);
  @override
  _i5.Future<Map<String, dynamic>?> getMovieById(int? id) =>
      (super.noSuchMethod(Invocation.method(#getMovieById, [id]),
              returnValue: Future<Map<String, dynamic>?>.value())
          as _i5.Future<Map<String, dynamic>?>);
  @override
  _i5.Future<List<Map<String, dynamic>>> getWatchlistTvSeries() =>
      (super.noSuchMethod(Invocation.method(#getWatchlistTvSeries, []),
              returnValue: Future<List<Map<String, dynamic>>>.value(
                  <Map<String, dynamic>>[]))
          as _i5.Future<List<Map<String, dynamic>>>);
  @override
  _i5.Future<int> insertWatchlistTvSeries(_i3.TvSeriesTable? tvSeries) => (super
      .noSuchMethod(Invocation.method(#insertWatchlistTvSeries, [tvSeries]),
          returnValue: Future<int>.value(0)) as _i5.Future<int>);
  @override
  _i5.Future<int> removeWatchlistTvSeries(_i3.TvSeriesTable? tvSeries) => (super
      .noSuchMethod(Invocation.method(#removeWatchlistTvSeries, [tvSeries]),
          returnValue: Future<int>.value(0)) as _i5.Future<int>);
  @override
  _i5.Future<Map<String, dynamic>?> getTvSeriesById(int? id) =>
      (super.noSuchMethod(Invocation.method(#getTvSeriesById, [id]),
              returnValue: Future<Map<String, dynamic>?>.value())
          as _i5.Future<Map<String, dynamic>?>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [Client].
///
/// See the documentation for Mockito's code generation for more information.
class MockHttpClient extends _i1.Mock implements _i4.Client {
  MockHttpClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i4.Response> head(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(Invocation.method(#head, [url], {#headers: headers}),
              returnValue: Future<_i4.Response>.value(_FakeResponse_4()))
          as _i5.Future<_i4.Response>);
  @override
  _i5.Future<_i4.Response> get(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(Invocation.method(#get, [url], {#headers: headers}),
              returnValue: Future<_i4.Response>.value(_FakeResponse_4()))
          as _i5.Future<_i4.Response>);
  @override
  _i5.Future<_i4.Response> post(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i7.Encoding? encoding}) =>
      (super.noSuchMethod(
              Invocation.method(#post, [url],
                  {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: Future<_i4.Response>.value(_FakeResponse_4()))
          as _i5.Future<_i4.Response>);
  @override
  _i5.Future<_i4.Response> put(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i7.Encoding? encoding}) =>
      (super.noSuchMethod(
              Invocation.method(#put, [url],
                  {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: Future<_i4.Response>.value(_FakeResponse_4()))
          as _i5.Future<_i4.Response>);
  @override
  _i5.Future<_i4.Response> patch(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i7.Encoding? encoding}) =>
      (super.noSuchMethod(
              Invocation.method(#patch, [url],
                  {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: Future<_i4.Response>.value(_FakeResponse_4()))
          as _i5.Future<_i4.Response>);
  @override
  _i5.Future<_i4.Response> delete(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i7.Encoding? encoding}) =>
      (super.noSuchMethod(
              Invocation.method(#delete, [url],
                  {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: Future<_i4.Response>.value(_FakeResponse_4()))
          as _i5.Future<_i4.Response>);
  @override
  _i5.Future<String> read(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(Invocation.method(#read, [url], {#headers: headers}),
          returnValue: Future<String>.value('')) as _i5.Future<String>);
  @override
  _i5.Future<_i8.Uint8List> readBytes(Uri? url,
          {Map<String, String>? headers}) =>
      (super.noSuchMethod(
              Invocation.method(#readBytes, [url], {#headers: headers}),
              returnValue: Future<_i8.Uint8List>.value(_i8.Uint8List(0)))
          as _i5.Future<_i8.Uint8List>);
  @override
  _i5.Future<_i4.StreamedResponse> send(_i4.BaseRequest? request) =>
      (super.noSuchMethod(Invocation.method(#send, [request]),
              returnValue:
                  Future<_i4.StreamedResponse>.value(_FakeStreamedResponse_5()))
          as _i5.Future<_i4.StreamedResponse>);
  @override
  void close() => super.noSuchMethod(Invocation.method(#close, []),
      returnValueForMissingStub: null);
  @override
  String toString() => super.toString();
}
