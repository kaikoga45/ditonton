// Mocks generated by Mockito 5.0.16 from annotations
// in ditonton/test/presentation/provider/tv_series_detail_notifier_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i6;

import 'package:dartz/dartz.dart' as _i3;
import 'package:ditonton/common/failure.dart' as _i7;
import 'package:ditonton/common/state_enum.dart' as _i12;
import 'package:ditonton/domain/entities/tv_season.dart' as _i14;
import 'package:ditonton/domain/entities/tv_series.dart' as _i10;
import 'package:ditonton/domain/entities/tv_series_detail.dart' as _i8;
import 'package:ditonton/domain/repositories/tv_series_repository.dart' as _i2;
import 'package:ditonton/domain/repositories/watchlist_repository.dart' as _i4;
import 'package:ditonton/domain/usecases/get_tv_season.dart' as _i13;
import 'package:ditonton/domain/usecases/get_tv_series_detail.dart' as _i5;
import 'package:ditonton/domain/usecases/get_tv_series_recommendation.dart'
    as _i9;
import 'package:ditonton/domain/usecases/get_watchlist_status.dart' as _i11;
import 'package:ditonton/domain/usecases/remove_watchlist_tv_series.dart'
    as _i16;
import 'package:ditonton/domain/usecases/save_watchlist_tv_series.dart' as _i15;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeTvSeriesRepository_0 extends _i1.Fake
    implements _i2.TvSeriesRepository {}

class _FakeEither_1<L, R> extends _i1.Fake implements _i3.Either<L, R> {}

class _FakeWatchlistRepository_2 extends _i1.Fake
    implements _i4.WatchlistRepository {}

/// A class which mocks [GetTvSeriesDetail].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTvSeriesDetail extends _i1.Mock implements _i5.GetTvSeriesDetail {
  MockGetTvSeriesDetail() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TvSeriesRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeTvSeriesRepository_0()) as _i2.TvSeriesRepository);
  @override
  set repository(_i2.TvSeriesRepository? _repository) =>
      super.noSuchMethod(Invocation.setter(#repository, _repository),
          returnValueForMissingStub: null);
  @override
  _i6.Future<_i3.Either<_i7.Failure, _i8.TvSeriesDetail>> execute(int? id) =>
      (super.noSuchMethod(Invocation.method(#execute, [id]),
              returnValue:
                  Future<_i3.Either<_i7.Failure, _i8.TvSeriesDetail>>.value(
                      _FakeEither_1<_i7.Failure, _i8.TvSeriesDetail>()))
          as _i6.Future<_i3.Either<_i7.Failure, _i8.TvSeriesDetail>>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [GetTvSeriesRecommendations].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTvSeriesRecommendations extends _i1.Mock
    implements _i9.GetTvSeriesRecommendations {
  MockGetTvSeriesRecommendations() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TvSeriesRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeTvSeriesRepository_0()) as _i2.TvSeriesRepository);
  @override
  _i6.Future<_i3.Either<_i7.Failure, List<_i10.TvSeries>>> execute(int? id) =>
      (super.noSuchMethod(Invocation.method(#execute, [id]),
              returnValue:
                  Future<_i3.Either<_i7.Failure, List<_i10.TvSeries>>>.value(
                      _FakeEither_1<_i7.Failure, List<_i10.TvSeries>>()))
          as _i6.Future<_i3.Either<_i7.Failure, List<_i10.TvSeries>>>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [GetWatchListStatus].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetWatchListStatus extends _i1.Mock
    implements _i11.GetWatchListStatus {
  MockGetWatchListStatus() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.WatchlistRepository get repository => (super.noSuchMethod(
      Invocation.getter(#repository),
      returnValue: _FakeWatchlistRepository_2()) as _i4.WatchlistRepository);
  @override
  _i6.Future<_i3.Either<_i7.Failure, bool>> execute(
          int? id, _i12.WatchlistType? type) =>
      (super.noSuchMethod(Invocation.method(#execute, [id, type]),
              returnValue: Future<_i3.Either<_i7.Failure, bool>>.value(
                  _FakeEither_1<_i7.Failure, bool>()))
          as _i6.Future<_i3.Either<_i7.Failure, bool>>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [GetTvSeason].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTvSeason extends _i1.Mock implements _i13.GetTvSeason {
  MockGetTvSeason() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TvSeriesRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeTvSeriesRepository_0()) as _i2.TvSeriesRepository);
  @override
  _i6.Future<_i3.Either<_i7.Failure, List<_i14.TvSeason>>> execute(
          int? id, int? totalSeason) =>
      (super.noSuchMethod(Invocation.method(#execute, [id, totalSeason]),
              returnValue:
                  Future<_i3.Either<_i7.Failure, List<_i14.TvSeason>>>.value(
                      _FakeEither_1<_i7.Failure, List<_i14.TvSeason>>()))
          as _i6.Future<_i3.Either<_i7.Failure, List<_i14.TvSeason>>>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [SaveWatchlistTvSeries].
///
/// See the documentation for Mockito's code generation for more information.
class MockSaveWatchlistTvSeries extends _i1.Mock
    implements _i15.SaveWatchlistTvSeries {
  MockSaveWatchlistTvSeries() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.WatchlistRepository get repository => (super.noSuchMethod(
      Invocation.getter(#repository),
      returnValue: _FakeWatchlistRepository_2()) as _i4.WatchlistRepository);
  @override
  _i6.Future<_i3.Either<_i7.Failure, String>> execute(
          _i8.TvSeriesDetail? tvSeries) =>
      (super.noSuchMethod(Invocation.method(#execute, [tvSeries]),
              returnValue: Future<_i3.Either<_i7.Failure, String>>.value(
                  _FakeEither_1<_i7.Failure, String>()))
          as _i6.Future<_i3.Either<_i7.Failure, String>>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [RemoveWatchlistTvSerios].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoveWatchlistTvSerios extends _i1.Mock
    implements _i16.RemoveWatchlistTvSerios {
  MockRemoveWatchlistTvSerios() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.WatchlistRepository get repository => (super.noSuchMethod(
      Invocation.getter(#repository),
      returnValue: _FakeWatchlistRepository_2()) as _i4.WatchlistRepository);
  @override
  _i6.Future<_i3.Either<_i7.Failure, String>> execute(
          _i8.TvSeriesDetail? tvSeries) =>
      (super.noSuchMethod(Invocation.method(#execute, [tvSeries]),
              returnValue: Future<_i3.Either<_i7.Failure, String>>.value(
                  _FakeEither_1<_i7.Failure, String>()))
          as _i6.Future<_i3.Either<_i7.Failure, String>>);
  @override
  String toString() => super.toString();
}
