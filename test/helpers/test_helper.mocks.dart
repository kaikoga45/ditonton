// Mocks generated by Mockito 5.0.16 from annotations
// in ditonton/test/helpers/test_helper.dart.
// Do not manually edit this file.

import 'dart:async' as _i8;
import 'dart:convert' as _i29;
import 'dart:typed_data' as _i30;

import 'package:dartz/dartz.dart' as _i2;
import 'package:ditonton/common/failure.dart' as _i9;
import 'package:ditonton/common/state_enum.dart' as _i11;
import 'package:ditonton/data/datasources/db/database_helper.dart' as _i27;
import 'package:ditonton/data/datasources/movie_local_data_source.dart' as _i21;
import 'package:ditonton/data/datasources/movie_remote_data_source.dart'
    as _i19;
import 'package:ditonton/data/datasources/tv_series_local_data_source.dart'
    as _i25;
import 'package:ditonton/data/datasources/tv_series_remote_data_source.dart'
    as _i23;
import 'package:ditonton/data/models/movie_detail_response.dart' as _i3;
import 'package:ditonton/data/models/movie_model.dart' as _i20;
import 'package:ditonton/data/models/movie_table.dart' as _i22;
import 'package:ditonton/data/models/tv_season_response.dart' as _i4;
import 'package:ditonton/data/models/tv_series_detail_response.dart' as _i5;
import 'package:ditonton/data/models/tv_series_model.dart' as _i24;
import 'package:ditonton/data/models/tv_series_table.dart' as _i26;
import 'package:ditonton/domain/entities/movie.dart' as _i15;
import 'package:ditonton/domain/entities/movie_detail.dart' as _i13;
import 'package:ditonton/domain/entities/tv_season.dart' as _i17;
import 'package:ditonton/domain/entities/tv_series.dart' as _i18;
import 'package:ditonton/domain/entities/tv_series_detail.dart' as _i12;
import 'package:ditonton/domain/entities/watchlist.dart' as _i10;
import 'package:ditonton/domain/repositories/movie_repository.dart' as _i14;
import 'package:ditonton/domain/repositories/tv_series_repository.dart' as _i16;
import 'package:ditonton/domain/repositories/watchlist_repository.dart' as _i7;
import 'package:http/http.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;
import 'package:sqflite/sqflite.dart' as _i28;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeEither_0<L, R> extends _i1.Fake implements _i2.Either<L, R> {}

class _FakeMovieDetailResponse_1 extends _i1.Fake
    implements _i3.MovieDetailResponse {}

class _FakeTvSeasonResponse_2 extends _i1.Fake implements _i4.TvSeasonResponse {
}

class _FakeTvSeriesDetailResponse_3 extends _i1.Fake
    implements _i5.TvSeriesDetailResponse {}

class _FakeResponse_4 extends _i1.Fake implements _i6.Response {}

class _FakeStreamedResponse_5 extends _i1.Fake implements _i6.StreamedResponse {
}

/// A class which mocks [WatchlistRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockWatchlistRepository extends _i1.Mock
    implements _i7.WatchlistRepository {
  MockWatchlistRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i10.Watchlist>>> getWatchlist() =>
      (super.noSuchMethod(Invocation.method(#getWatchlist, []),
              returnValue:
                  Future<_i2.Either<_i9.Failure, List<_i10.Watchlist>>>.value(
                      _FakeEither_0<_i9.Failure, List<_i10.Watchlist>>()))
          as _i8.Future<_i2.Either<_i9.Failure, List<_i10.Watchlist>>>);
  @override
  _i8.Future<_i2.Either<_i9.Failure, bool>> isAddedToWatchlist(
          int? id, _i11.WatchlistType? type) =>
      (super.noSuchMethod(Invocation.method(#isAddedToWatchlist, [id, type]),
              returnValue: Future<_i2.Either<_i9.Failure, bool>>.value(
                  _FakeEither_0<_i9.Failure, bool>()))
          as _i8.Future<_i2.Either<_i9.Failure, bool>>);
  @override
  _i8.Future<_i2.Either<_i9.Failure, String>> saveWatchlistTvSeries(
          _i12.TvSeriesDetail? tvSeries) =>
      (super.noSuchMethod(Invocation.method(#saveWatchlistTvSeries, [tvSeries]),
              returnValue: Future<_i2.Either<_i9.Failure, String>>.value(
                  _FakeEither_0<_i9.Failure, String>()))
          as _i8.Future<_i2.Either<_i9.Failure, String>>);
  @override
  _i8.Future<_i2.Either<_i9.Failure, String>> saveWatchlistMovies(
          _i13.MovieDetail? movie) =>
      (super.noSuchMethod(Invocation.method(#saveWatchlistMovies, [movie]),
              returnValue: Future<_i2.Either<_i9.Failure, String>>.value(
                  _FakeEither_0<_i9.Failure, String>()))
          as _i8.Future<_i2.Either<_i9.Failure, String>>);
  @override
  _i8.Future<_i2.Either<_i9.Failure, String>> removeWatchlistTvSeries(
          _i12.TvSeriesDetail? tvSeries) =>
      (super.noSuchMethod(
              Invocation.method(#removeWatchlistTvSeries, [tvSeries]),
              returnValue: Future<_i2.Either<_i9.Failure, String>>.value(
                  _FakeEither_0<_i9.Failure, String>()))
          as _i8.Future<_i2.Either<_i9.Failure, String>>);
  @override
  _i8.Future<_i2.Either<_i9.Failure, String>> removeWatchlistMovies(
          _i13.MovieDetail? movie) =>
      (super.noSuchMethod(Invocation.method(#removeWatchlistMovies, [movie]),
              returnValue: Future<_i2.Either<_i9.Failure, String>>.value(
                  _FakeEither_0<_i9.Failure, String>()))
          as _i8.Future<_i2.Either<_i9.Failure, String>>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [MovieRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieRepository extends _i1.Mock implements _i14.MovieRepository {
  MockMovieRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i15.Movie>>> getNowPlayingMovies() =>
      (super.noSuchMethod(Invocation.method(#getNowPlayingMovies, []),
          returnValue: Future<_i2.Either<_i9.Failure, List<_i15.Movie>>>.value(
              _FakeEither_0<_i9.Failure, List<_i15.Movie>>())) as _i8
          .Future<_i2.Either<_i9.Failure, List<_i15.Movie>>>);
  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i15.Movie>>> getPopularMovies() =>
      (super.noSuchMethod(Invocation.method(#getPopularMovies, []),
          returnValue: Future<_i2.Either<_i9.Failure, List<_i15.Movie>>>.value(
              _FakeEither_0<_i9.Failure, List<_i15.Movie>>())) as _i8
          .Future<_i2.Either<_i9.Failure, List<_i15.Movie>>>);
  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i15.Movie>>> getTopRatedMovies() =>
      (super.noSuchMethod(Invocation.method(#getTopRatedMovies, []),
          returnValue: Future<_i2.Either<_i9.Failure, List<_i15.Movie>>>.value(
              _FakeEither_0<_i9.Failure, List<_i15.Movie>>())) as _i8
          .Future<_i2.Either<_i9.Failure, List<_i15.Movie>>>);
  @override
  _i8.Future<_i2.Either<_i9.Failure, _i13.MovieDetail>> getMovieDetail(
          int? id) =>
      (super.noSuchMethod(Invocation.method(#getMovieDetail, [id]),
          returnValue: Future<_i2.Either<_i9.Failure, _i13.MovieDetail>>.value(
              _FakeEither_0<_i9.Failure, _i13.MovieDetail>())) as _i8
          .Future<_i2.Either<_i9.Failure, _i13.MovieDetail>>);
  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i15.Movie>>> getMovieRecommendations(
          int? id) =>
      (super.noSuchMethod(Invocation.method(#getMovieRecommendations, [id]),
          returnValue: Future<_i2.Either<_i9.Failure, List<_i15.Movie>>>.value(
              _FakeEither_0<_i9.Failure, List<_i15.Movie>>())) as _i8
          .Future<_i2.Either<_i9.Failure, List<_i15.Movie>>>);
  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i15.Movie>>> searchMovies(
          String? query) =>
      (super.noSuchMethod(Invocation.method(#searchMovies, [query]),
          returnValue: Future<_i2.Either<_i9.Failure, List<_i15.Movie>>>.value(
              _FakeEither_0<_i9.Failure, List<_i15.Movie>>())) as _i8
          .Future<_i2.Either<_i9.Failure, List<_i15.Movie>>>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [TvSeriesRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvSeriesRepository extends _i1.Mock
    implements _i16.TvSeriesRepository {
  MockTvSeriesRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i17.TvSeason>>> getTvSeason(
          int? id, int? totalSeason) =>
      (super.noSuchMethod(Invocation.method(#getTvSeason, [id, totalSeason]),
              returnValue:
                  Future<_i2.Either<_i9.Failure, List<_i17.TvSeason>>>.value(
                      _FakeEither_0<_i9.Failure, List<_i17.TvSeason>>()))
          as _i8.Future<_i2.Either<_i9.Failure, List<_i17.TvSeason>>>);
  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i18.TvSeries>>> getTvOnAir() =>
      (super.noSuchMethod(Invocation.method(#getTvOnAir, []),
              returnValue:
                  Future<_i2.Either<_i9.Failure, List<_i18.TvSeries>>>.value(
                      _FakeEither_0<_i9.Failure, List<_i18.TvSeries>>()))
          as _i8.Future<_i2.Either<_i9.Failure, List<_i18.TvSeries>>>);
  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i18.TvSeries>>>
      getPopularTvSeries() => (super.noSuchMethod(
              Invocation.method(#getPopularTvSeries, []),
              returnValue:
                  Future<_i2.Either<_i9.Failure, List<_i18.TvSeries>>>.value(
                      _FakeEither_0<_i9.Failure, List<_i18.TvSeries>>()))
          as _i8.Future<_i2.Either<_i9.Failure, List<_i18.TvSeries>>>);
  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i18.TvSeries>>>
      getTopRatedTvSeries() => (super.noSuchMethod(
              Invocation.method(#getTopRatedTvSeries, []),
              returnValue:
                  Future<_i2.Either<_i9.Failure, List<_i18.TvSeries>>>.value(
                      _FakeEither_0<_i9.Failure, List<_i18.TvSeries>>()))
          as _i8.Future<_i2.Either<_i9.Failure, List<_i18.TvSeries>>>);
  @override
  _i8.Future<_i2.Either<_i9.Failure, _i12.TvSeriesDetail>> getTvSeriesDetail(
          int? id) =>
      (super.noSuchMethod(Invocation.method(#getTvSeriesDetail, [id]),
              returnValue:
                  Future<_i2.Either<_i9.Failure, _i12.TvSeriesDetail>>.value(
                      _FakeEither_0<_i9.Failure, _i12.TvSeriesDetail>()))
          as _i8.Future<_i2.Either<_i9.Failure, _i12.TvSeriesDetail>>);
  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i18.TvSeries>>>
      getTvSeriesRecommendations(int? id) => (super.noSuchMethod(
              Invocation.method(#getTvSeriesRecommendations, [id]),
              returnValue:
                  Future<_i2.Either<_i9.Failure, List<_i18.TvSeries>>>.value(
                      _FakeEither_0<_i9.Failure, List<_i18.TvSeries>>()))
          as _i8.Future<_i2.Either<_i9.Failure, List<_i18.TvSeries>>>);
  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i18.TvSeries>>> searchTvSeries(
          String? query) =>
      (super.noSuchMethod(Invocation.method(#searchTvSeries, [query]),
              returnValue:
                  Future<_i2.Either<_i9.Failure, List<_i18.TvSeries>>>.value(
                      _FakeEither_0<_i9.Failure, List<_i18.TvSeries>>()))
          as _i8.Future<_i2.Either<_i9.Failure, List<_i18.TvSeries>>>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [MovieRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieRemoteDataSource extends _i1.Mock
    implements _i19.MovieRemoteDataSource {
  MockMovieRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<List<_i20.MovieModel>> getNowPlayingMovies() =>
      (super.noSuchMethod(Invocation.method(#getNowPlayingMovies, []),
              returnValue:
                  Future<List<_i20.MovieModel>>.value(<_i20.MovieModel>[]))
          as _i8.Future<List<_i20.MovieModel>>);
  @override
  _i8.Future<List<_i20.MovieModel>> getPopularMovies() => (super.noSuchMethod(
          Invocation.method(#getPopularMovies, []),
          returnValue: Future<List<_i20.MovieModel>>.value(<_i20.MovieModel>[]))
      as _i8.Future<List<_i20.MovieModel>>);
  @override
  _i8.Future<List<_i20.MovieModel>> getTopRatedMovies() => (super.noSuchMethod(
          Invocation.method(#getTopRatedMovies, []),
          returnValue: Future<List<_i20.MovieModel>>.value(<_i20.MovieModel>[]))
      as _i8.Future<List<_i20.MovieModel>>);
  @override
  _i8.Future<_i3.MovieDetailResponse> getMovieDetail(int? id) =>
      (super.noSuchMethod(Invocation.method(#getMovieDetail, [id]),
              returnValue: Future<_i3.MovieDetailResponse>.value(
                  _FakeMovieDetailResponse_1()))
          as _i8.Future<_i3.MovieDetailResponse>);
  @override
  _i8.Future<List<_i20.MovieModel>> getMovieRecommendations(int? id) =>
      (super.noSuchMethod(Invocation.method(#getMovieRecommendations, [id]),
              returnValue:
                  Future<List<_i20.MovieModel>>.value(<_i20.MovieModel>[]))
          as _i8.Future<List<_i20.MovieModel>>);
  @override
  _i8.Future<List<_i20.MovieModel>> searchMovies(String? query) =>
      (super.noSuchMethod(Invocation.method(#searchMovies, [query]),
              returnValue:
                  Future<List<_i20.MovieModel>>.value(<_i20.MovieModel>[]))
          as _i8.Future<List<_i20.MovieModel>>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [MovieLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieLocalDataSource extends _i1.Mock
    implements _i21.MovieLocalDataSource {
  MockMovieLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<String> insertWatchlist(_i22.MovieTable? movie) =>
      (super.noSuchMethod(Invocation.method(#insertWatchlist, [movie]),
          returnValue: Future<String>.value('')) as _i8.Future<String>);
  @override
  _i8.Future<String> removeWatchlist(_i22.MovieTable? movie) =>
      (super.noSuchMethod(Invocation.method(#removeWatchlist, [movie]),
          returnValue: Future<String>.value('')) as _i8.Future<String>);
  @override
  _i8.Future<_i22.MovieTable?> getMovieById(int? id) =>
      (super.noSuchMethod(Invocation.method(#getMovieById, [id]),
              returnValue: Future<_i22.MovieTable?>.value())
          as _i8.Future<_i22.MovieTable?>);
  @override
  _i8.Future<List<_i22.MovieTable>> getWatchlistMovies() => (super.noSuchMethod(
          Invocation.method(#getWatchlistMovies, []),
          returnValue: Future<List<_i22.MovieTable>>.value(<_i22.MovieTable>[]))
      as _i8.Future<List<_i22.MovieTable>>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [TvSeriesRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvSeriesRemoteDataSource extends _i1.Mock
    implements _i23.TvSeriesRemoteDataSource {
  MockTvSeriesRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<_i4.TvSeasonResponse> getTvSeason(int? id, int? noSeason) =>
      (super.noSuchMethod(Invocation.method(#getTvSeason, [id, noSeason]),
              returnValue:
                  Future<_i4.TvSeasonResponse>.value(_FakeTvSeasonResponse_2()))
          as _i8.Future<_i4.TvSeasonResponse>);
  @override
  _i8.Future<List<_i24.TvSeriesModel>> getTvOnAir() => (super.noSuchMethod(
          Invocation.method(#getTvOnAir, []),
          returnValue:
              Future<List<_i24.TvSeriesModel>>.value(<_i24.TvSeriesModel>[]))
      as _i8.Future<List<_i24.TvSeriesModel>>);
  @override
  _i8.Future<List<_i24.TvSeriesModel>> getPopularTvSeries() =>
      (super.noSuchMethod(Invocation.method(#getPopularTvSeries, []),
          returnValue: Future<List<_i24.TvSeriesModel>>.value(
              <_i24.TvSeriesModel>[])) as _i8.Future<List<_i24.TvSeriesModel>>);
  @override
  _i8.Future<List<_i24.TvSeriesModel>> getTopRatedTvSeries() =>
      (super.noSuchMethod(Invocation.method(#getTopRatedTvSeries, []),
          returnValue: Future<List<_i24.TvSeriesModel>>.value(
              <_i24.TvSeriesModel>[])) as _i8.Future<List<_i24.TvSeriesModel>>);
  @override
  _i8.Future<_i5.TvSeriesDetailResponse> getTvSeriesDetail(int? id) =>
      (super.noSuchMethod(Invocation.method(#getTvSeriesDetail, [id]),
              returnValue: Future<_i5.TvSeriesDetailResponse>.value(
                  _FakeTvSeriesDetailResponse_3()))
          as _i8.Future<_i5.TvSeriesDetailResponse>);
  @override
  _i8.Future<List<_i24.TvSeriesModel>> getTvSeriesRecommendations(int? id) =>
      (super.noSuchMethod(Invocation.method(#getTvSeriesRecommendations, [id]),
          returnValue: Future<List<_i24.TvSeriesModel>>.value(
              <_i24.TvSeriesModel>[])) as _i8.Future<List<_i24.TvSeriesModel>>);
  @override
  _i8.Future<List<_i24.TvSeriesModel>> searchTvSeries(String? query) =>
      (super.noSuchMethod(Invocation.method(#searchTvSeries, [query]),
          returnValue: Future<List<_i24.TvSeriesModel>>.value(
              <_i24.TvSeriesModel>[])) as _i8.Future<List<_i24.TvSeriesModel>>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [TvSeriesLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvSeriesLocalDataSource extends _i1.Mock
    implements _i25.TvSeriesLocalDataSource {
  MockTvSeriesLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<String> insertWatchlist(_i26.TvSeriesTable? tvSeries) =>
      (super.noSuchMethod(Invocation.method(#insertWatchlist, [tvSeries]),
          returnValue: Future<String>.value('')) as _i8.Future<String>);
  @override
  _i8.Future<String> removeWatchlist(_i26.TvSeriesTable? tvSeries) =>
      (super.noSuchMethod(Invocation.method(#removeWatchlist, [tvSeries]),
          returnValue: Future<String>.value('')) as _i8.Future<String>);
  @override
  _i8.Future<_i26.TvSeriesTable?> getTvSeriesById(int? id) =>
      (super.noSuchMethod(Invocation.method(#getTvSeriesById, [id]),
              returnValue: Future<_i26.TvSeriesTable?>.value())
          as _i8.Future<_i26.TvSeriesTable?>);
  @override
  _i8.Future<List<_i26.TvSeriesTable>> getWatchlistTvSeries() =>
      (super.noSuchMethod(Invocation.method(#getWatchlistTvSeries, []),
          returnValue: Future<List<_i26.TvSeriesTable>>.value(
              <_i26.TvSeriesTable>[])) as _i8.Future<List<_i26.TvSeriesTable>>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [DatabaseHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseHelper extends _i1.Mock implements _i27.DatabaseHelper {
  MockDatabaseHelper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<_i28.Database?> get database =>
      (super.noSuchMethod(Invocation.getter(#database),
              returnValue: Future<_i28.Database?>.value())
          as _i8.Future<_i28.Database?>);
  @override
  _i8.Future<List<Map<String, dynamic>>> getWatchlistMovie() =>
      (super.noSuchMethod(Invocation.method(#getWatchlistMovie, []),
              returnValue: Future<List<Map<String, dynamic>>>.value(
                  <Map<String, dynamic>>[]))
          as _i8.Future<List<Map<String, dynamic>>>);
  @override
  _i8.Future<int> insertWatchlistMovie(_i22.MovieTable? movie) =>
      (super.noSuchMethod(Invocation.method(#insertWatchlistMovie, [movie]),
          returnValue: Future<int>.value(0)) as _i8.Future<int>);
  @override
  _i8.Future<int> removeWatchlistMovie(_i22.MovieTable? movie) =>
      (super.noSuchMethod(Invocation.method(#removeWatchlistMovie, [movie]),
          returnValue: Future<int>.value(0)) as _i8.Future<int>);
  @override
  _i8.Future<Map<String, dynamic>?> getMovieById(int? id) =>
      (super.noSuchMethod(Invocation.method(#getMovieById, [id]),
              returnValue: Future<Map<String, dynamic>?>.value())
          as _i8.Future<Map<String, dynamic>?>);
  @override
  _i8.Future<List<Map<String, dynamic>>> getWatchlistTvSeries() =>
      (super.noSuchMethod(Invocation.method(#getWatchlistTvSeries, []),
              returnValue: Future<List<Map<String, dynamic>>>.value(
                  <Map<String, dynamic>>[]))
          as _i8.Future<List<Map<String, dynamic>>>);
  @override
  _i8.Future<int> insertWatchlistTvSeries(_i26.TvSeriesTable? tvSeries) =>
      (super.noSuchMethod(
          Invocation.method(#insertWatchlistTvSeries, [tvSeries]),
          returnValue: Future<int>.value(0)) as _i8.Future<int>);
  @override
  _i8.Future<int> removeWatchlistTvSeries(_i26.TvSeriesTable? tvSeries) =>
      (super.noSuchMethod(
          Invocation.method(#removeWatchlistTvSeries, [tvSeries]),
          returnValue: Future<int>.value(0)) as _i8.Future<int>);
  @override
  _i8.Future<Map<String, dynamic>?> getTvSeriesById(int? id) =>
      (super.noSuchMethod(Invocation.method(#getTvSeriesById, [id]),
              returnValue: Future<Map<String, dynamic>?>.value())
          as _i8.Future<Map<String, dynamic>?>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [Client].
///
/// See the documentation for Mockito's code generation for more information.
class MockHttpClient extends _i1.Mock implements _i6.Client {
  MockHttpClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<_i6.Response> head(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(Invocation.method(#head, [url], {#headers: headers}),
              returnValue: Future<_i6.Response>.value(_FakeResponse_4()))
          as _i8.Future<_i6.Response>);
  @override
  _i8.Future<_i6.Response> get(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(Invocation.method(#get, [url], {#headers: headers}),
              returnValue: Future<_i6.Response>.value(_FakeResponse_4()))
          as _i8.Future<_i6.Response>);
  @override
  _i8.Future<_i6.Response> post(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i29.Encoding? encoding}) =>
      (super.noSuchMethod(
              Invocation.method(#post, [url],
                  {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: Future<_i6.Response>.value(_FakeResponse_4()))
          as _i8.Future<_i6.Response>);
  @override
  _i8.Future<_i6.Response> put(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i29.Encoding? encoding}) =>
      (super.noSuchMethod(
              Invocation.method(#put, [url],
                  {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: Future<_i6.Response>.value(_FakeResponse_4()))
          as _i8.Future<_i6.Response>);
  @override
  _i8.Future<_i6.Response> patch(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i29.Encoding? encoding}) =>
      (super.noSuchMethod(
              Invocation.method(#patch, [url],
                  {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: Future<_i6.Response>.value(_FakeResponse_4()))
          as _i8.Future<_i6.Response>);
  @override
  _i8.Future<_i6.Response> delete(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i29.Encoding? encoding}) =>
      (super.noSuchMethod(
              Invocation.method(#delete, [url],
                  {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: Future<_i6.Response>.value(_FakeResponse_4()))
          as _i8.Future<_i6.Response>);
  @override
  _i8.Future<String> read(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(Invocation.method(#read, [url], {#headers: headers}),
          returnValue: Future<String>.value('')) as _i8.Future<String>);
  @override
  _i8.Future<_i30.Uint8List> readBytes(Uri? url,
          {Map<String, String>? headers}) =>
      (super.noSuchMethod(
              Invocation.method(#readBytes, [url], {#headers: headers}),
              returnValue: Future<_i30.Uint8List>.value(_i30.Uint8List(0)))
          as _i8.Future<_i30.Uint8List>);
  @override
  _i8.Future<_i6.StreamedResponse> send(_i6.BaseRequest? request) =>
      (super.noSuchMethod(Invocation.method(#send, [request]),
              returnValue:
                  Future<_i6.StreamedResponse>.value(_FakeStreamedResponse_5()))
          as _i8.Future<_i6.StreamedResponse>);
  @override
  void close() => super.noSuchMethod(Invocation.method(#close, []),
      returnValueForMissingStub: null);
  @override
  String toString() => super.toString();
}
